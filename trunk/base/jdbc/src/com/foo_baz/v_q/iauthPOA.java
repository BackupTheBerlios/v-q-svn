package com.foo_baz.v_q;


/**
* com/foo_baz/v_q/iauthPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from ../auth.idl
* piÄ…tek, 17 marzec 2006 20:09:44 CET
*/


/**
	 * Base class representing authorization module.
	 */
public abstract class iauthPOA extends org.omg.PortableServer.Servant
 implements com.foo_baz.v_q.iauthOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("dom_add", new java.lang.Integer (0));
    _methods.put ("dom_rm", new java.lang.Integer (1));
    _methods.put ("dom_id", new java.lang.Integer (2));
    _methods.put ("dom_name", new java.lang.Integer (3));
    _methods.put ("dom_ls", new java.lang.Integer (4));
    _methods.put ("da_add", new java.lang.Integer (5));
    _methods.put ("da_rm", new java.lang.Integer (6));
    _methods.put ("da_ls_by_dom", new java.lang.Integer (7));
    _methods.put ("dip_add", new java.lang.Integer (8));
    _methods.put ("dip_rm", new java.lang.Integer (9));
    _methods.put ("dip_ls_by_dom", new java.lang.Integer (10));
    _methods.put ("user_add", new java.lang.Integer (11));
    _methods.put ("user_rep", new java.lang.Integer (12));
    _methods.put ("user_rm", new java.lang.Integer (13));
    _methods.put ("user_pass", new java.lang.Integer (14));
    _methods.put ("user_get", new java.lang.Integer (15));
    _methods.put ("user_ex", new java.lang.Integer (16));
    _methods.put ("user_ls_by_dom", new java.lang.Integer (17));
    _methods.put ("user_cnt_by_dom", new java.lang.Integer (18));
    _methods.put ("eb_add", new java.lang.Integer (19));
    _methods.put ("eb_rm", new java.lang.Integer (20));
    _methods.put ("eb_ls", new java.lang.Integer (21));
    _methods.put ("qt_user_get", new java.lang.Integer (22));
    _methods.put ("qt_user_set", new java.lang.Integer (23));
    _methods.put ("qt_user_def_set", new java.lang.Integer (24));
    _methods.put ("qt_user_def_get", new java.lang.Integer (25));
    _methods.put ("user_conf_add", new java.lang.Integer (26));
    _methods.put ("user_conf_rm_by_type", new java.lang.Integer (27));
    _methods.put ("user_conf_rm", new java.lang.Integer (28));
    _methods.put ("user_conf_ls", new java.lang.Integer (29));
    _methods.put ("user_conf_ls_by_type", new java.lang.Integer (30));
    _methods.put ("user_conf_rep", new java.lang.Integer (31));
    _methods.put ("user_conf_get", new java.lang.Integer (32));
    _methods.put ("user_conf_type_has", new java.lang.Integer (33));
    _methods.put ("user_conf_type_cnt", new java.lang.Integer (34));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /// Adds domain to database
       case 0:  // vq/iauth/dom_add
       {
         try {
           String dom = in.read_string ();
           org.omg.CORBA.IntHolder dom_id = new org.omg.CORBA.IntHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dom_add (dom, dom_id);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.id_typeHelper.write (out, dom_id.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Removes domain.
       case 1:  // vq/iauth/dom_rm
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dom_rm (dom_id);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Translates domain name to id.
       case 2:  // vq/iauth/dom_id
       {
         try {
           String dom = in.read_string ();
           org.omg.CORBA.IntHolder dom_id = new org.omg.CORBA.IntHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dom_id (dom, dom_id);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.id_typeHelper.write (out, dom_id.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // vq/iauth/dom_name
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           org.omg.CORBA.StringHolder domain = new org.omg.CORBA.StringHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dom_name (dom_id, domain);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           out.write_string (domain.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // vq/iauth/dom_ls
       {
         try {
           com.foo_baz.v_q.ivqPackage.domain_info_listHolder dis = new com.foo_baz.v_q.ivqPackage.domain_info_listHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dom_ls (dis);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.domain_info_listHelper.write (out, dis.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// add alias for a domain
       case 5:  // vq/iauth/da_add
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String ali = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.da_add (dom_id, ali);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         }
         break;
       }


  /// Removes alias
       case 6:  // vq/iauth/da_rm
       {
         try {
           String ali = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.da_rm (ali);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         }
         break;
       }


  /// Lists all aliases for a domain
       case 7:  // vq/iauth/da_ls_by_dom
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.string_listHolder alis = new com.foo_baz.v_q.ivqPackage.string_listHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.da_ls_by_dom (dom_id, alis);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.string_listHelper.write (out, alis.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         }
         break;
       }


  /// add IP address for a domain
       case 8:  // vq/iauth/dip_add
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String ip = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dip_add (dom_id, ip);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         }
         break;
       }


  /// Removes IP address
       case 9:  // vq/iauth/dip_rm
       {
         try {
           String ip = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dip_rm (ip);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         }
         break;
       }


  /// Lists all IP addresses for a domain
       case 10:  // vq/iauth/dip_ls_by_dom
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.string_listHolder ips = new com.foo_baz.v_q.ivqPackage.string_listHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.dip_ls_by_dom (dom_id, ips);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.string_listHelper.write (out, ips.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         }
         break;
       }


  /// Adds user
       case 11:  // vq/iauth/user_add
       {
         try {
           com.foo_baz.v_q.ivqPackage.user_info ai = com.foo_baz.v_q.iauthPackage.user_infoHelper.read (in);
           boolean is_banned = in.read_boolean ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_add (ai, is_banned);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Modify user
       case 12:  // vq/iauth/user_rep
       {
         try {
           com.foo_baz.v_q.ivqPackage.user_info ai = com.foo_baz.v_q.iauthPackage.user_infoHelper.read (in);
           boolean password = in.read_boolean ();
           boolean dir = in.read_boolean ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_rep (ai, password, dir);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Removes user
       case 13:  // vq/iauth/user_rm
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String login = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_rm (dom_id, login);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Changes password for user
       case 14:  // vq/iauth/user_pass
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String login = in.read_string ();
           String pass = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_pass (dom_id, login, pass);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Gets informations about user
       case 15:  // vq/iauth/user_get
       {
         try {
           com.foo_baz.v_q.ivqPackage.user_infoHolder ai = new com.foo_baz.v_q.ivqPackage.user_infoHolder ();
           ai.value = com.foo_baz.v_q.iauthPackage.user_infoHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_get (ai);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.user_infoHelper.write (out, ai.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// check if user exists (err_noent if not, err_no if exists)
       case 16:  // vq/iauth/user_ex
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String login = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_ex (dom_id, login);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// get all users in specified domain
       case 17:  // vq/iauth/user_ls_by_dom
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           int start = com.foo_baz.v_q.iauthPackage.size_typeHelper.read (in);
           int cnt = com.foo_baz.v_q.iauthPackage.size_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.user_info_listHolder uis = new com.foo_baz.v_q.ivqPackage.user_info_listHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_ls_by_dom (dom_id, start, cnt, uis);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.user_info_listHelper.write (out, uis.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// get number of users in specified domain
       case 18:  // vq/iauth/user_cnt_by_dom
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           org.omg.CORBA.IntHolder cnt = new org.omg.CORBA.IntHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_cnt_by_dom (dom_id, cnt);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.size_typeHelper.write (out, cnt.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  //@{
       case 19:  // vq/iauth/eb_add
       {
         try {
           String re_domain = in.read_string ();
           String re_login = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.eb_add (re_domain, re_login);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }

       case 20:  // vq/iauth/eb_rm
       {
         try {
           String re_domain = in.read_string ();
           String re_login = in.read_string ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.eb_rm (re_domain, re_login);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }

       case 21:  // vq/iauth/eb_ls
       {
         try {
           com.foo_baz.v_q.ivqPackage.email_banned_listHolder ebs = new com.foo_baz.v_q.ivqPackage.email_banned_listHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.eb_ls (ebs);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.email_banned_listHelper.write (out, ebs.value);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Gets limits for user
       case 22:  // vq/iauth/qt_user_get
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user_id = in.read_string ();
           org.omg.CORBA.IntHolder bytes_max = new org.omg.CORBA.IntHolder ();
           org.omg.CORBA.IntHolder files_max = new org.omg.CORBA.IntHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.qt_user_get (dom_id, user_id, bytes_max, files_max);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.quota_typeHelper.write (out, bytes_max.value);
           com.foo_baz.v_q.iauthPackage.quota_typeHelper.write (out, files_max.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Sets limits for user
       case 23:  // vq/iauth/qt_user_set
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user_id = in.read_string ();
           int bytes_max = com.foo_baz.v_q.iauthPackage.quota_typeHelper.read (in);
           int files_max = com.foo_baz.v_q.iauthPackage.quota_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.qt_user_set (dom_id, user_id, bytes_max, files_max);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Sets default value for a domain
       case 24:  // vq/iauth/qt_user_def_set
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           int bytes_max = com.foo_baz.v_q.iauthPackage.quota_typeHelper.read (in);
           int files_max = com.foo_baz.v_q.iauthPackage.quota_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.qt_user_def_set (dom_id, bytes_max, files_max);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Gets default value
       case 25:  // vq/iauth/qt_user_def_get
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           org.omg.CORBA.IntHolder bytes_max = new org.omg.CORBA.IntHolder ();
           org.omg.CORBA.IntHolder files_max = new org.omg.CORBA.IntHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.qt_user_def_get (dom_id, bytes_max, files_max);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.quota_typeHelper.write (out, bytes_max.value);
           com.foo_baz.v_q.iauthPackage.quota_typeHelper.write (out, files_max.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Adds mailbox configuration
       case 26:  // vq/iauth/user_conf_add
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user = in.read_string ();
           String pfix = in.read_string ();
           com.foo_baz.v_q.ivqPackage.user_conf_infoHolder ui = new com.foo_baz.v_q.ivqPackage.user_conf_infoHolder ();
           ui.value = com.foo_baz.v_q.iauthPackage.user_conf_infoHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_add (dom_id, user, pfix, ui);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.user_conf_infoHelper.write (out, ui.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Removes all mailbox configuration entries
       case 27:  // vq/iauth/user_conf_rm_by_type
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user = in.read_string ();
           String pfix = in.read_string ();
           short ut = com.foo_baz.v_q.iauthPackage.user_conf_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_rm_by_type (dom_id, user, pfix, ut);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Removes mailbox configuration entry
       case 28:  // vq/iauth/user_conf_rm
       {
         try {
           int id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_rm (id);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Lists mailbox configuration
       case 29:  // vq/iauth/user_conf_ls
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user = in.read_string ();
           String pfix = in.read_string ();
           com.foo_baz.v_q.ivqPackage.user_conf_info_listHolder uis = new com.foo_baz.v_q.ivqPackage.user_conf_info_listHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_ls (dom_id, user, pfix, uis);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.user_conf_info_listHelper.write (out, uis.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Lists mailbox configuation of specified type
       case 30:  // vq/iauth/user_conf_ls_by_type
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user = in.read_string ();
           String pfix = in.read_string ();
           short ut = com.foo_baz.v_q.iauthPackage.user_conf_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.user_conf_info_listHolder uis = new com.foo_baz.v_q.ivqPackage.user_conf_info_listHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_ls_by_type (dom_id, user, pfix, ut, uis);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.user_conf_info_listHelper.write (out, uis.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Changes existing entry
       case 31:  // vq/iauth/user_conf_rep
       {
         try {
           com.foo_baz.v_q.ivqPackage.user_conf_info ui = com.foo_baz.v_q.iauthPackage.user_conf_infoHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_rep (ui);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Gets existing entry
       case 32:  // vq/iauth/user_conf_get
       {
         try {
           com.foo_baz.v_q.ivqPackage.user_conf_infoHolder ui = new com.foo_baz.v_q.ivqPackage.user_conf_infoHolder ();
           ui.value = com.foo_baz.v_q.iauthPackage.user_conf_infoHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_get (ui);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.user_conf_infoHelper.write (out, ui.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Checks whether mailbox has entry of specified type
       case 33:  // vq/iauth/user_conf_type_has
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user = in.read_string ();
           String pfix = in.read_string ();
           short ut = com.foo_baz.v_q.iauthPackage.user_conf_typeHelper.read (in);
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_type_has (dom_id, user, pfix, ut);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }


  /// Counts entries of specified type
       case 34:  // vq/iauth/user_conf_type_cnt
       {
         try {
           int dom_id = com.foo_baz.v_q.iauthPackage.id_typeHelper.read (in);
           String user = in.read_string ();
           String pfix = in.read_string ();
           short ut = com.foo_baz.v_q.iauthPackage.user_conf_typeHelper.read (in);
           org.omg.CORBA.IntHolder cnt = new org.omg.CORBA.IntHolder ();
           com.foo_baz.v_q.ivqPackage.error $result = null;
           $result = this.user_conf_type_cnt (dom_id, user, pfix, ut, cnt);
           out = $rh.createReply();
           com.foo_baz.v_q.ivqPackage.errorHelper.write (out, $result);
           com.foo_baz.v_q.iauthPackage.size_typeHelper.write (out, cnt.value);
         } catch (com.foo_baz.v_q.null_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.null_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.db_error $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.db_errorHelper.write (out, $ex);
         } catch (com.foo_baz.v_q.except $ex) {
           out = $rh.createExceptionReply ();
           com.foo_baz.v_q.exceptHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:vq/iauth:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public iauth _this() 
  {
    return iauthHelper.narrow(
    super._this_object());
  }

  public iauth _this(org.omg.CORBA.ORB orb) 
  {
    return iauthHelper.narrow(
    super._this_object(orb));
  }


} // class iauthPOA
